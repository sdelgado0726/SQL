#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

#1. How many orders were placed in January?
SELECT COUNT(orderId)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6 
AND orderID != 'Order ID';

#2. How many of those orders were for an iPhone?
SELECT COUNT(orderId)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6 
AND orderID != 'Order ID'
AND Product = 'iPhone';

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT
c.order_id,
c.acctnum
FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales f
ON c.order_id = f.orderID
WHERE length(c.order_id) = 6 
AND c.order_id != 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT distinct
product,
price
FROM BIT_DB.JanSales
ORDER BY price ASC
LIMIT 1;

#OR
SELECT distinct
product,
price
FROM BIT_DB.JanSales
WHERE price 
IN (SELECT MIN(price) FROM BIT_DB.JanSales);

#5. What is the total revenue for each product sold in January?
SELECT
product,
SUM(Quantity) * price as total_revenue
FROM BIT_DB.JanSales
GROUP BY product;

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT
product,
SUM(Quantity) as total_quantity,
SUM(Quantity) * price as total_revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT
COUNT(distinct c.acctnum) as customer,
AVG(f.Quantity * f.price) as average_spent 
FROM BIT_DB.customers c
INNER JOIN BIT_DB.FebSales f
ON c.order_id = f.orderID
WHERE f.Quantity > 2
AND length(c.order_id) = 6
AND c.order_id != 'Order ID';
